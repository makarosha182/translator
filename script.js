// –ë–∞–∑–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ —Å –±—É–º–µ—Ä—Å–∫–æ–≥–æ –Ω–∞ –∑—É–º–µ—Ä—Å–∫–∏–π
const translations = {
    boomerToZoomer: {
        // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ": "–π–æ—É, —á—ë –∫–∞–∫ üåÖ",
        "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å": "–¥–∞—Ä–æ–≤–∞ üëã",
        "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä": "–≤–µ—á–µ—Ä–æ—á–µ–∫ –≤ —Ö–∞—Ç—É ‚ú®",
        "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ": "—Ö–∞–π, –∫–∞–∫ —Å–∞–º? üëã",
        "–ø—Ä–∏–≤–µ—Ç": "–ø—Ä–∏–≤, —á—ë –∫–∞–∫",
        "–∫–∞–∫ –¥–µ–ª–∞": "–∫–∞–∫ –∂–∏–∑–Ω—å, –Ω–æ—Ä–º? üòé",
        "–∫–∞–∫ –ø–æ–∂–∏–≤–∞–µ—Ç–µ": "–∫–∞–∫ –æ–Ω–æ –≤–æ–æ–±—â–µ? ü§î",
        
        // –ü—Ä–æ—â–∞–Ω–∏—è
        "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è": "–ø–æ–∫–∞, –±–± üëã",
        "–≤—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ": "—É–¥–∞—á–∏, –±—Ä–æ ‚úåÔ∏è",
        "—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏": "—Å–ø–æ–∫–∏, —Å–ª–∞–¥–∫–∏—Ö —Å–Ω–æ–≤ üò¥",
        
        // –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
        "—Å–ø–∞—Å–∏–±–æ": "—Å–ø—Å, –∫—Ä–∞—Å–∞–≤–∞ üôè",
        "–±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ": "–¥–∞—Ä–æ–≤–∞, —Ä–µ—Å–ø–µ–∫—Ç üíØ",
        "–±–ª–∞–≥–æ–¥–∞—Ä—é": "—Å–µ–Ω–∫—Å, —Ç–æ–ø—á–∏–∫ üî•",
        
        // –°–æ–≥–ª–∞—Å–∏–µ/–Ω–µ—Å–æ–≥–ª–∞—Å–∏–µ
        "–¥–∞": "–∞–≥–∞—Å—å, –∫–æ–Ω–µ—á–Ω–æ üëç",
        "–Ω–µ—Ç": "–Ω–µ–∞, –Ω–µ –∑–∞—à–ª–æ üëé",
        "—Å–æ–≥–ª–∞—Å–µ–Ω": "—Ñ–∞–∫—Ç—ã, —Ç–∞–∫ –∏ –µ—Å—Ç—å üíØ",
        "–Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω": "–∫—Ä–∏–Ω–∂, –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω ‚ùå",
        "—Ö–æ—Ä–æ—à–æ": "–æ–∫–µ–π, –Ω–∞–π—Å üëå",
        "–æ—Ç–ª–∏—á–Ω–æ": "–≤–∞—É, —Ç–æ–ø—á–∏–∫ üî•",
        "–ø–ª–æ—Ö–æ": "–Ω–µ –∑–∞—à–ª–æ, –∫—Ä–∏–Ω–∂ üò¨",
        
        // –≠–º–æ—Ü–∏–∏
        "—è —Ä–∞–¥": "—è –≤ –∫–∞–π—Ñ–µ üòä",
        "—è —Ä–∞—Å—Å—Ç—Ä–æ–µ–Ω": "—è –≤ –ø–µ—á–∞–ª–∏, –≥—Ä—É—Å—Ç–Ω–æ üò¢",
        "—è –∑–ª—é—Å—å": "—è –≤ –±–µ—à–µ–Ω—Å—Ç–≤–µ, –±–æ–º–±–∏—Ç üò§",
        "–º–Ω–µ —Å–º–µ—à–Ω–æ": "–æ—Ä—É, —Å–º–µ—à–Ω–æ üòÇ",
        "–º–Ω–µ —Å–∫—É—á–Ω–æ": "—Å–∫—É–∫–æ—Ç–∞, –¥–µ–ª–∞—Ç—å –Ω–µ—á–µ–≥–æ üò¥",
        
        // –û—Ü–µ–Ω–∫–∏
        "–º–æ–ª–æ–¥–µ—Ü": "–∫—Ä–∞—Å–∞–≤—á–∏–∫, —Ä–µ—Å–ø–µ–∫—Ç üí™",
        "—É–º–Ω–∏—Ü–∞": "–º–æ–∑–≥, —Ç–æ–ø üß†",
        "–≥–ª—É–ø–æ—Å—Ç—å": "–∫—Ä–∏–Ω–∂, —Ñ–µ–π–ª ü§¶",
        "–µ—Ä—É–Ω–¥–∞": "–±—Ä–µ–¥, –Ω–µ –∑–∞—à–ª–æ üò¨",
        "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ": "–æ–≥–æ–Ω—å, —Ç–æ–ø—á–∏–∫ üî•",
        "—É–∂–∞—Å–Ω–æ": "–∂–µ—Å—Ç—å, –∫—Ä–∏–Ω–∂ üò±",
        
        // –û–±—â–µ–Ω–∏–µ
        "–ø–æ–∑–≤–æ–Ω–∏ –º–Ω–µ": "–∫–∏–Ω—å –∑–≤–æ–Ω–æ–∫ üì±",
        "–Ω–∞–ø–∏—à–∏ –º–Ω–µ": "–Ω–∞–ø–∏—à–∏ –≤ –ª—Å üí¨",
        "–≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è": "—É–≤–∏–¥–∏–º—Å—è, –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è ü§ù",
        "–ø–æ–π–¥—ë–º": "–≥–æ, –ø–æ—à–ª–∏ üö∂",
        "–ø–æ–¥–æ–∂–¥–∏": "—Å–µ–∫—É–Ω–¥—É, –ø–æ–≥–æ–¥–∏ ‚è±Ô∏è",
        
        // –†–∞–±–æ—Ç–∞/—É—á—ë–±–∞
        "—Ä–∞–±–æ—Ç–∞": "—Ä–∞–±–æ—Ç–∫–∞, –¥–≤–∏–∂ üíº",
        "—É—á—ë–±–∞": "—É—á—ë–±–∫–∞, —É–Ω–∏–≤–µ—Ä üìö",
        "–Ω–∞—á–∞–ª—å–Ω–∏–∫": "–±–æ—Å—Å, —à–µ—Ñ üëî",
        "–∫–æ–ª–ª–µ–≥–∞": "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ–ª–µ–≥–∞ ü§ù",
        "–¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ": "–¥–∑, –¥–æ–º–∞—à–∫–∞ üìù",
        
        // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏
        "–∫–æ–º–ø—å—é—Ç–µ—Ä": "–∫–æ–º–ø, –ø–∫ üíª",
        "—Ç–µ–ª–µ—Ñ–æ–Ω": "—Ç–µ–ª–µ—Ñ–æ–Ω, –º–æ–±–∏–ª–∞ üì±",
        "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç": "–∏–Ω–µ—Ç, –æ–Ω–ª–∞–π–Ω üåê",
        "—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è": "—Ñ–æ—Ç–∫–∞, —Ñ–æ—Ç–æ üì∏",
        
        // –†–∞–∑–Ω–æ–µ
        "–¥–µ–Ω—å–≥–∏": "–±–∞–±–∫–∏, –¥–µ–Ω—å–≥–∏ üí∞",
        "–¥–æ—Ä–æ–≥–æ": "–¥–æ—Ä–æ–≥–æ, –Ω–µ –ø–æ –∫–∞—Ä–º–∞–Ω—É üí∏",
        "–¥–µ—à–µ–≤–æ": "–¥—ë—à–µ–≤–æ, –Ω–æ—Ä–º —Ü–µ–Ω–∞ üíµ",
        "–∫—Ä–∞—Å–∏–≤–æ": "–∫—Ä–∞—Å–∏–≤–æ, —ç—Å—Ç–µ—Ç–∏—á–Ω–æ ‚ú®",
        "–Ω–µ–∫—Ä–∞—Å–∏–≤–æ": "–Ω–µ —ç—Å—Ç–µ—Ç–∏—á–Ω–æ, –º–∏–º–æ üò¨",
        "–≤–∫—É—Å–Ω–æ": "–≤–∫—É—Å–Ω–æ, —Ç–æ–ø üòã",
        "–Ω–µ–≤–∫—É—Å–Ω–æ": "–Ω–µ –∑–∞—à–ª–æ, —Ñ—É ü§¢",
        "–±—ã—Å—Ç—Ä–æ": "–±—ã—Å—Ç—Ä–æ, —à—É—Å—Ç—Ä–æ ‚ö°",
        "–º–µ–¥–ª–µ–Ω–Ω–æ": "–º–µ–¥–ª–µ–Ω–Ω–æ, —Ç–æ—Ä–º–æ–∑–∞ üêå",
        "–ø–æ–Ω—è—Ç–Ω–æ": "–ø–æ–Ω—è–ª, —è—Å–Ω–æ üëå",
        "–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ": "–Ω–µ –ø–æ–Ω—è–ª, —á—ë? ü§î",
    }
};

// –°–æ–∑–¥–∞—ë–º –æ–±—Ä–∞—Ç–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Å –∑—É–º–µ—Ä—Å–∫–æ–≥–æ –Ω–∞ –±—É–º–µ—Ä—Å–∫–∏–π
const zoomerToBoomer = {};
Object.entries(translations.boomerToZoomer).forEach(([boomer, zoomer]) => {
    // –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –∑—É–º–µ—Ä—Å–∫–æ–≥–æ –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    const zoomerClean = zoomer.replace(/[^\w–∞-—è–ê-–Ø—ë–Å\s,]/g, '').trim().toLowerCase();
    zoomerToBoomer[zoomerClean] = boomer;
});

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentMode = 'boomerToZoomer';

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const boomerToZoomerBtn = document.getElementById('boomer-to-zoomer');
const zoomerToBoomerBtn = document.getElementById('zoomer-to-boomer');
const inputText = document.getElementById('input-text');
const outputText = document.getElementById('output-text');
const translateBtn = document.getElementById('translate-btn');
const inputLabel = document.getElementById('input-label');
const outputLabel = document.getElementById('output-label');
const examplesGrid = document.getElementById('examples-grid');

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
boomerToZoomerBtn.addEventListener('click', () => {
    currentMode = 'boomerToZoomer';
    boomerToZoomerBtn.classList.add('active');
    zoomerToBoomerBtn.classList.remove('active');
    inputLabel.textContent = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –±—É–º–µ—Ä—Å–∫–æ–º:';
    outputLabel.textContent = '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∑—É–º–µ—Ä—Å–∫–∏–π:';
    inputText.placeholder = '–ù–∞–ø—Ä–∏–º–µ—Ä: –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –∫–∞–∫ –¥–µ–ª–∞?';
    inputText.value = '';
    outputText.textContent = '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...';
    outputText.classList.remove('translated');
    updateExamples();
});

zoomerToBoomerBtn.addEventListener('click', () => {
    currentMode = 'zoomerToBoomer';
    zoomerToBoomerBtn.classList.add('active');
    boomerToZoomerBtn.classList.remove('active');
    inputLabel.textContent = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –∑—É–º–µ—Ä—Å–∫–æ–º:';
    outputLabel.textContent = '–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –±—É–º–µ—Ä—Å–∫–∏–π:';
    inputText.placeholder = '–ù–∞–ø—Ä–∏–º–µ—Ä: –π–æ—É, —á—ë –∫–∞–∫';
    inputText.value = '';
    outputText.textContent = '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å...';
    outputText.classList.remove('translated');
    updateExamples();
});

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
function translate(text, mode) {
    const dict = mode === 'boomerToZoomer' ? translations.boomerToZoomer : zoomerToBoomer;
    
    let result = text.toLowerCase();
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ –ø–æ –¥–ª–∏–Ω–µ (—Å–Ω–∞—á–∞–ª–∞ –¥–ª–∏–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã)
    const sortedKeys = Object.keys(dict).sort((a, b) => b.length - a.length);
    
    // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–∑—ã
    sortedKeys.forEach(key => {
        const regex = new RegExp('\\b' + key.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + '\\b', 'gi');
        result = result.replace(regex, dict[key]);
    });
    
    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –¥–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (result.toLowerCase() === text.toLowerCase()) {
        if (mode === 'boomerToZoomer') {
            return result + ' (—É–∂–µ –∑–≤—É—á–∏—Ç –ø–æ-–∑—É–º–µ—Ä—Å–∫–∏, –±—Ä–æ! üòé)';
        } else {
            return result + ' (—É–∂–µ –∑–≤—É—á–∏—Ç –ø–æ-–±—É–º–µ—Ä—Å–∫–∏! üë¥)';
        }
    }
    
    // –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è
    result = result.charAt(0).toUpperCase() + result.slice(1);
    
    return result;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
translateBtn.addEventListener('click', () => {
    const input = inputText.value.trim();
    
    if (!input) {
        outputText.textContent = '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞! üìù';
        outputText.classList.remove('translated');
        return;
    }
    
    const translated = translate(input, currentMode);
    outputText.textContent = translated;
    outputText.classList.add('translated');
});

// Enter –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
inputText.addEventListener('keypress', (e) => {
    if (e.key === 'Enter' && !e.shiftKey) {
        e.preventDefault();
        translateBtn.click();
    }
});

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–æ–≤
function updateExamples() {
    examplesGrid.innerHTML = '';
    
    const dict = currentMode === 'boomerToZoomer' ? translations.boomerToZoomer : zoomerToBoomer;
    const examples = Object.entries(dict).slice(0, 6);
    
    examples.forEach(([from, to]) => {
        const card = document.createElement('div');
        card.className = 'example-card';
        
        const fromDiv = document.createElement('div');
        fromDiv.className = 'from';
        fromDiv.textContent = currentMode === 'boomerToZoomer' ? from : to;
        
        const arrow = document.createElement('div');
        arrow.textContent = '‚Üì';
        arrow.style.textAlign = 'center';
        arrow.style.margin = '5px 0';
        
        const toDiv = document.createElement('div');
        toDiv.className = 'to';
        toDiv.textContent = currentMode === 'boomerToZoomer' ? to : from;
        
        card.appendChild(fromDiv);
        card.appendChild(arrow);
        card.appendChild(toDiv);
        
        // –ö–ª–∏–∫ –ø–æ –ø—Ä–∏–º–µ—Ä—É –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–µ –≤–≤–æ–¥–∞
        card.addEventListener('click', () => {
            inputText.value = currentMode === 'boomerToZoomer' ? from : to;
            inputText.focus();
        });
        
        examplesGrid.appendChild(card);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
updateExamples();

